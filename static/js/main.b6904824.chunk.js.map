{"version":3,"sources":["Components/QAPair.js","Components/HistoryModal.js","Components/BasicUI.js","Images/eightball.jpg","App.js","reportWebVitals.js","index.js"],"names":["QAPair","props","response","style","color","HistoryModal","historyArr","step","history","length","push","getResponseColor","body","className","onClick","toggle","clear","Modal","open","onClose","BasicUI","validateInput","state","question","endsWith","setQuestion","e","setState","target","value","sanitize","string","replaceAll","appendToHistory","newHistory","shift","clearHistory","toggleModal","getLastResponse","modalOpen","loadingPage","loadingResponse","error","a","this","callEightBallAPI","params","encodeURIComponent","uri","fetch","json","result","status","validQuestion","lastResponse","CircularProgress","src","image","type","onChange","executeCall","Component","App","Eightball","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6904824.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function QAPair(props){\n    return(\n        <div>\n        <p>{props.response['question']}</p>\n        <p style={{'color':props.color}}>{props.response['answer']}</p>\n            <hr/>\n        </div>\n    )\n}\n","import React from 'react';\nimport QAPair from \"./QAPair\";\nimport Modal from '@material-ui/core/Modal';\n\nexport default function HistoryModal(props){\n    let historyArr = [];\n    for (let step=0;step<props.history.length;step++){\n        historyArr.push(<QAPair response={props.history[step]} color={props.getResponseColor(props.history[step])}/>)\n    }\n    const body=(\n        <div className='modal'>\n            {historyArr}\n            <button onClick={props.toggle}>Close</button>\n            <button onClick={props.clear}>Clear history</button>\n        </div>\n    )\n    return(\n        <Modal open={props.open} onClose={props.toggle}><p>{body}</p></Modal>\n    )\n}\n","import React,{Component} from \"react\";\nimport '../App.css'\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport HistoryModal from \"./HistoryModal\";\n\nclass BasicUI extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            question:'',\n            history:[],\n            loadingPage:true,\n            loadingResponse:false,\n            modalOpen:false,\n            error:\"\"\n        }\n    }\n\n    validateInput=()=>{\n        return this.state.question.endsWith(\"?\");\n    }\n\n    setQuestion=(e)=>{\n        this.setState({question:e.target.value});\n    }\n\n    async executeCall(){\n        if (this.validateInput()){\n            this.setState({loadingResponse:true},()=>{\n                this.callEightBallAPI()\n            });\n\n        }\n    }\n\n    sanitize=(string)=>{\n        return string.replaceAll(\"/\",\"\");\n    }\n\n    async callEightBallAPI(){\n        let params = encodeURIComponent(this.sanitize(this.state.question));\n        let uri = \"https://8ball.delegator.com/magic/JSON/\"+params;\n        let response = await fetch(uri);\n        let body = await response.json();\n        this.appendToHistory(body['magic']);\n        if (body['magic']['type']!==\"Neutral\"){\n            this.setState({question:\"\"});\n        }\n        let result = response.status === 200 ? \"\" : \"Server unresponsive.\"\n        this.setState({loadingResponse:false,error:result});\n    }\n\n    appendToHistory=(response)=>{\n        let newHistory = this.state.history;\n        if (this.state.history.length<10){\n            newHistory.push(response);\n        }else{\n            newHistory.shift();\n            newHistory.push(response);\n        }\n        this.setState({history:newHistory});\n    }\n\n    clearHistory=()=>{\n        this.setState({history:[]});\n        this.toggleModal();\n    }\n\n    getLastResponse=()=>{\n        if (this.state.history.length>0){\n            return this.state.history[this.state.history.length-1]\n        }else{\n            return {'answer':\"\",'question':\"\",'type':\"\"};\n        }\n    }\n\n    getResponseColor=(response)=>{\n        switch (response['type']){\n            case 'Affirmative':\n                return \"green\";\n            case \"Contrary\":\n                return \"red\";\n            default:\n                return \"black\";\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loadingPage:false});\n    }\n\n    toggleModal=()=>{\n        this.setState({modalOpen:!this.state.modalOpen});\n    }\n\n\n    render() {\n        let validQuestion = this.validateInput();\n        let lastResponse = this.getLastResponse();\n        if (this.state.loadingPage){\n            return (\n                <CircularProgress/>\n            )\n        }\n        let response = this.state.loadingResponse ? <CircularProgress color=\"primary\"/> : <p className='paragraphStyle' style={{'color':this.getResponseColor(lastResponse)}}>{lastResponse['answer']}</p>\n        return(\n            <div>\n                <h1 className='headerStyle'>Magic 8-Ball</h1>\n                <img className='imageStyle' src={this.props.image}/>\n                <br/><br/>\n                {response}\n                <p className='paragraphStyle'>Ask the oracle:</p>\n                <input type={\"text\"} className={validQuestion ? 'textFieldValidStyle' : 'textFieldInvalidStyle'} value={this.state.question} onChange={this.setQuestion}/>\n                <p style={{\"color\":\"white\"}}>{validQuestion ? \"\":\"Must end in a question mark\"}</p>\n                <p style={{\"color\":'red'}}>{this.state.error}</p>\n                <button className={validQuestion ? 'buttonValid' : 'buttonInvalid'} onClick={()=>this.executeCall()}>Ask</button><br/><br/>\n                <button className={this.state.history.length>0 ? 'buttonValid' : 'buttonInvalid'} onClick={()=>this.toggleModal()}>View History</button>\n                <HistoryModal clear={this.clearHistory} getResponseColor={this.getResponseColor} history={this.state.history} open={this.state.modalOpen} toggle={this.toggleModal}/>\n            </div>\n        )\n    }\n\n}\n\nexport default BasicUI;\n","export default __webpack_public_path__ + \"static/media/eightball.5c347cb0.jpg\";","import './App.css';\nimport BasicUI from \"./Components/BasicUI\";\nimport Eightball from \"./Images/eightball.jpg\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasicUI image={Eightball}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}